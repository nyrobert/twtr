#!/bin/bash
#
# Simple command line application for Twitter.

. ./config.sh
. ./api.sh
. ./oauth.sh

get_timeline() {
  declare -A request_params

  local i=0
  local request_params
  local response
  local response_length

  request_params["method"]="GET"
  request_params["url"]="https://api.twitter.com/${api_version}/statuses/home_timeline.json"
  request_params["count"]=5

  while true; do
    if [[ "${i}" -gt 0 ]] && [[ "${response_length}" -gt 0 ]]; then
      request_params["since_id"]=$(echo "${response}" | jq -r '.[0] | .id')
    fi

    response=$(api_request "$(declare -p request_params)")
    response_length=$(echo "${response}" | jq -r '. | length')

    display_timeline "${response}"

    (( i++ ))

    sleep 60
  done
}

display_timeline() {
  local i
  local j
  local yellow="\e[1;33m"
  local grey="\e[0;37m"
  local no_color="\e[0m"

  local response_length=$(echo "$1" | jq -r '. | length')

  for (( i="${response_length}"; i>=1; i-- )); do
    j=$[$i - 1]

    local name=$(echo "$1" | jq -r '.['${j}'] | .user.name')
    local screen_name=$(echo "$1" | jq -r '.['${j}'] | .user.screen_name')
    local text=$(echo "$1" | jq -r '.['${j}'] | .text')

    printf "${yellow}%s ${grey}@%s${no_color}\n" "${name}" "${screen_name}"
    echo -e "${text}\n"
  done
}

update_status() {
  echo "status update: $1"
}

error_handler() {
  echo "$1" >&2
  exit 1
}

main() {
  local OPTIND
  local OPTARG
  local opt

  config_load

  while	 getopts ':u:' opt; do
    case "${opt}" in
      u) update_status "${OPTARG}" ;;
      *) error_handler "Status text is required" ;;
    esac
  done

  if [[ "${OPTIND}" -eq 1 ]]; then
    get_timeline
  fi
}

main "$@"
