#!/bin/bash
#
# Simple command line application for Twitter.

. ./oauth.sh

readonly config_file=./.config
readonly api_version="1.1"

load_config() {
  if [[ -f "${config_file}" ]] && [[ -r "${config_file}" ]]; then
    . "${config_file}"

    check_config

    readonly consumer_key
    readonly consuner_secret
    readonly access_token
    readonly access_secret
  else
    error_handler "Config file not found"
  fi
}

check_config() {
  if [[ -z "${consumer_key}" ]]; then
    error_handler "Consumer key (API key) not found"
  elif [[ -z "${consumer_secret}" ]]; then
    error_handler "Consumer secret (API secret) not found"
  elif [[ -z "${access_token}" ]]; then
    error_handler "Access token not found"
  elif [[ -z "${access_secret}" ]]; then
    error_handler "Access secret not found"
  fi
}

get_timeline() {
  declare -A request_params

  local request_params
  local response

  request_params["method"]="GET"
  request_params["url"]="https://api.twitter.com/${api_version}/statuses/home_timeline.json"
  request_params["count"]=5

  response=$(make_api_request "$(declare -p request_params)")

  display_timeline "${response}"
}

display_timeline() {
  local i=0
  local yellow="\e[1;33m"
  local grey="\e[0;37m"
  local no_color="\e[0m"

  local response_length=$(echo "$1" | jq '. | length')

  for (( i=0; i<"${response_length}"; i++ )); do
    local name=$(echo "$1" | jq -r '.['${i}'] | .user.name')
    local screen_name=$(echo "$1" | jq -r '.['${i}'] | .user.screen_name')
    local text=$(echo "$1" | jq -r '.['${i}'] | .text')

    printf "${yellow}%s ${grey}@%s${no_color}\n" "${name}" "${screen_name}"
    echo -e "${text}\n"
  done
}

make_api_request() {
  eval "declare -A request_params=${1#*=}"

  local request_params
  local header=$(oauth_generate_header "$(declare -p request_params)")

  echo $(curl \
    --get "${request_params[url]}" \
    --data "count=5" \
    --header "${header}" \
    --silent
  )
}

error_handler() {
  echo "$1" >&2
  exit 1
}

main() {
  load_config
  get_timeline
}

main
